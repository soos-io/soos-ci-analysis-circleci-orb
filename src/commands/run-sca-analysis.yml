description: >
  This command executes the SOOS SCA Analysis.
parameters:
  project_name:
    default: "SOOS CircleCI Template"
    description: The project name that will be displayed on the dashboard. If the value is empty or not indicated it will default to the repository name.
    type: string
  client_id:
    description: SOOS Client Id
    type: env_var_name
    default: SOOS_CLIENT_ID
  api_key:
    description: SOOS API Key
    type: env_var_name
    default: SOOS_API_KEY
  branch_name:
    description: 'Branch Name to create scan under'
    type: string
  build_version:
    description: 'Version of application build artifacts.'
    type: string
  on_failure:
    description: >
      Flag indicating whether or not to return an error code if errors are found in the SOOS script or SOOS analysis.
    type: enum
    enum: ["fail_the_build", "continue_on_failure"]
    default: "continue_on_failure"
  output_format:
    description: >
      Output format for vulnerabilities: only the value SARIF is available at the moment
    type: string
    default: ""
  directories_to_exclude:
    description: >
      List of directories (comma separated) that you want to exclude from the scan, eg: node_modules.
    type: string
    default: ""
  files_to_exclude:
    description: >
      List of files (comma separated) that you want to exclude from the scan, eg: package.json.
    type: string
    default: ""
  api_base_url:
    description: >
      URL of the api to be used, internal use only.
    type: string
    default: "https://api.soos.io/api/"
  package_managers:
    description: >
      List (comma separated) of Package Managers to filter manifest search. (Dart, Erlang, Homebrew, PHP, Java, Nuget, NPM, Python, Ruby, Rust.)
    type: string
    default: ""
  log_level:
    description: >
      Log level to show: INFO, WARN, FAIL, DEBUG, ERROR.
    type: string
    default: "INFO"
  verbose:
    description: Enable verbose logging
    type: boolean
    default: false
steps:
  - checkout # check out source code to working directory
  - run:
      name: Install soos-sca
      command: npm install --prefix ./soos @soos-io/soos-sca
  - run:
      name: 'Run Analysis'
      environment:
        SOOS_CLIENT_ID_VAR_NAME: '<<parameters.client_id>>'
        SOOS_API_KEY_VAR_NAME: '<<parameters.api_key>>'
        SOOS_BRANCH_NAME: '<<parameters.branch_name>>'
        SOOS_BUILD_VERSION: '<<parameters.build_version>>'
        SOOS_PROJECT_NAME: '<<parameters.project_name>>'
        SOOS_ON_FAILURE: '<<parameters.on_failure>>'
        SOOS_OUTPUT_FORMAT: '<<parameters.output_format>>'
        SOOS_DIRS_TO_EXCLUDE: '<<parameters.directories_to_exclude>>'
        SOOS_FILES_TO_EXCLUDE: '<<parameters.files_to_exclude>>'
        SOOS_API_URL: '<<parameters.api_base_url>>'
        SOOS_PACKAGE_MANAGERS: '<<parameters.package_managers>>'
        SOOS_LOG_LEVEL: '<<parameters.log_level>>'
        SOOS_VERBOSE: '<<parameters.verbose>>'
      command: <<include(scripts/run-sca.sh)>>
